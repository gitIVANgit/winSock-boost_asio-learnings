#pragma comment(lib, "ws2_32.lib")
#include <winsock2.h>
#include <iostream>
#include <vector>

#pragma warning(disable: 4996)

std::vector<SOCKET> Connections1;
int Counter = 0;

void ClientHandler(int index) {
	char msg[256];
	while (true) {

		int response = recv(Connections1[index], msg, sizeof(msg), NULL);
		if (response <= 0) {
			closesocket(Connections1[index]);
			return;
		}
		else {
			for (int i = 0; i <= Counter; i++) {
				send(Connections1[i], msg, sizeof(msg), NULL);
			}
		}
	}
}

int main(int argc, char* argv[]) {
	//WSAStartup
	WSAData wsaData;
	WORD DLLVersion = MAKEWORD(2, 1);
	if (WSAStartup(DLLVersion, &wsaData) != 0) {
		std::cout << "Error" << std::endl;
		exit(1);
	}

	SOCKADDR_IN addr;
	int sizeofaddr = sizeof(addr);
	addr.sin_addr.s_addr = inet_addr("127.0.0.1");
	addr.sin_port = htons(1111);
	addr.sin_family = AF_INET;

	SOCKET sListen = socket(AF_INET, SOCK_STREAM, NULL);
	bind(sListen, (SOCKADDR*)&addr, sizeof(addr));
	listen(sListen, SOMAXCONN);
	SOCKET Connections;

	for (int i=0;true;i++) {
		Connections = accept(sListen, (SOCKADDR*)&addr, &sizeofaddr);
		CreateThread(NULL, NULL, (LPTHREAD_START_ROUTINE)ClientHandler, (LPVOID)(i), NULL, NULL);
		std::cout << "Client Connected!\n";
		Connections1.push_back(Connections);
		std::cout << "qqq";
		Counter=i;

	}



	system("pause");
	return 0;
}