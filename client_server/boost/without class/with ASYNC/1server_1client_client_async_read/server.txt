#include <iostream>

#include <optional>
#include <boost\asio.hpp>
#include <thread>
#include <vector>
#include <unordered_set>
#include <future>
//
//
//void foo(boost::asio::ip::tcp::socket&sock) {
 //		});
//	foo(sock);
//}
int main()
{
	boost::asio::io_context ioContext;
	boost::asio::ip::tcp::acceptor acceptor(ioContext, boost::asio::ip::tcp::endpoint(boost::asio::ip::tcp::v4(), 99));
	boost::asio::ip::tcp::socket sock(ioContext);
	acceptor.accept(sock);
	while (true) {
		std::string str;
		std::cin >> str;
		boost::asio::write(sock, boost::asio::buffer(str+"\n"));
	}
	//ioContext.run();
	return 0;
}
